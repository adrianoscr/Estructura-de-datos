/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Pantallas;

import Logica.Carrito.*;
import Logica.*;
import static Pantallas.FRM_Entrada.contadorReservas;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author Cristopher M
 */

public class FRM_CrearReserva extends javax.swing.JFrame {

    //Se pasa la información de la pila que guarda cada una de las reservas. 
    private pilaReservacion reservaciones;
    private Usuario Usuario;
    private String Provincia;

    public FRM_CrearReserva(pilaReservacion usuarioReservas, Usuario usuario, String provicia) {
        initComponents();
        this.reservaciones = usuarioReservas;
        this.lbl_costoPersona.setText("5000");
        this.txt_nombreReservacion.setText(usuario.getNombreUsuario());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_nombreReservacion = new javax.swing.JTextField();
        btn_guardar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();
        lbl_costoIVA = new javax.swing.JTextField();
        lbl_costoPersona = new javax.swing.JTextField();
        lbl_costoTotal = new javax.swing.JTextField();
        sp_fechaHora = new javax.swing.JSpinner();
        sp_cantidadPersonas = new javax.swing.JSpinner();
        Lbl_Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_nombreReservacion.setBackground(new java.awt.Color(168, 205, 122));
        txt_nombreReservacion.setForeground(new java.awt.Color(0, 0, 0));
        txt_nombreReservacion.setText("Indique el dueño de la reservación");
        txt_nombreReservacion.setBorder(null);
        txt_nombreReservacion.setCaretColor(new java.awt.Color(107, 170, 28));
        txt_nombreReservacion.setSelectedTextColor(new java.awt.Color(107, 170, 28));
        txt_nombreReservacion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_nombreReservacionFocusGained(evt);
            }
        });
        getContentPane().add(txt_nombreReservacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, 230, 30));

        btn_guardar.setBackground(new java.awt.Color(2, 154, 213));
        btn_guardar.setForeground(new java.awt.Color(2, 154, 213));
        btn_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Contents/Botón Guardar Cambios.png"))); // NOI18N
        btn_guardar.setBorder(null);
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 520, -1, -1));

        btn_cancelar.setBackground(new java.awt.Color(2, 154, 213));
        btn_cancelar.setForeground(new java.awt.Color(2, 154, 213));
        btn_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Contents/btn_Cancelar.png"))); // NOI18N
        btn_cancelar.setBorder(null);
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_cancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 520, -1, -1));

        lbl_costoIVA.setBackground(new java.awt.Color(168, 205, 122));
        lbl_costoIVA.setForeground(new java.awt.Color(0, 0, 0));
        lbl_costoIVA.setText("Indique la cantidad de personas");
        lbl_costoIVA.setBorder(null);
        lbl_costoIVA.setCaretColor(new java.awt.Color(107, 170, 28));
        lbl_costoIVA.setSelectedTextColor(new java.awt.Color(107, 170, 28));
        lbl_costoIVA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbl_costoIVAActionPerformed(evt);
            }
        });
        getContentPane().add(lbl_costoIVA, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 410, 170, 30));

        lbl_costoPersona.setBackground(new java.awt.Color(168, 205, 122));
        lbl_costoPersona.setForeground(new java.awt.Color(0, 0, 0));
        lbl_costoPersona.setText("Indique el dueño de la reservación");
        lbl_costoPersona.setBorder(null);
        lbl_costoPersona.setCaretColor(new java.awt.Color(107, 170, 28));
        lbl_costoPersona.setSelectedTextColor(new java.awt.Color(107, 170, 28));
        getContentPane().add(lbl_costoPersona, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 270, 170, 30));

        lbl_costoTotal.setBackground(new java.awt.Color(168, 205, 122));
        lbl_costoTotal.setForeground(new java.awt.Color(0, 0, 0));
        lbl_costoTotal.setText("Indique la cantidad de personas");
        lbl_costoTotal.setBorder(null);
        lbl_costoTotal.setCaretColor(new java.awt.Color(107, 170, 28));
        lbl_costoTotal.setSelectedTextColor(new java.awt.Color(107, 170, 28));
        getContentPane().add(lbl_costoTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 340, 170, 30));

        sp_fechaHora.setModel(new javax.swing.SpinnerDateModel());
        getContentPane().add(sp_fechaHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 380, 240, 30));

        sp_cantidadPersonas.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sp_cantidadPersonasStateChanged(evt);
            }
        });
        getContentPane().add(sp_cantidadPersonas, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 270, 240, 30));

        Lbl_Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Contents/frm_Reservacion.png"))); // NOI18N
        getContentPane().add(Lbl_Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_nombreReservacionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nombreReservacionFocusGained

        txt_nombreReservacion.setText("");

    }//GEN-LAST:event_txt_nombreReservacionFocusGained

    private void sp_cantidadPersonasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sp_cantidadPersonasStateChanged

        //Se recuperan los valores y se realiza el calculo correspondiente al costo. 
        Float costoPersona = Float.parseFloat(lbl_costoPersona.getText());
        int cantidadPersonas = (Integer) sp_cantidadPersonas.getValue();
        Float costoTotal = costoPersona * cantidadPersonas;
        Float costoIVA = costoTotal + (costoTotal * 0.13f);

        //Se envia el costo a cada uno de los elementos de la interfaz. 
        lbl_costoTotal.setText(String.valueOf(costoTotal));
        lbl_costoIVA.setText(String.valueOf(costoIVA));

    }//GEN-LAST:event_sp_cantidadPersonasStateChanged

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed

        this.dispose();

        FRM_AtraccionesCR atraccionesCR = new FRM_AtraccionesCR();

        atraccionesCR.setLocationRelativeTo(null);
        atraccionesCR.setVisible(true);

    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed

        if (contadorReservas < 5) {

            //Incrementar contador para la pila 
            contadorReservas++;

            //variables necesarias para la conversion de fecha a string. 
            //SimpleDateFormat sdf = new SimpleDateFormat("dd/yyyy"); 
            //Se guarda la informacióin de la reserva.
            int id_Usuario = 1;
            int id_Reserva = 1;
            String nombreReservacion = txt_nombreReservacion.getText();
            int cantidadPersonas = (Integer) sp_cantidadPersonas.getValue();
            String fechaHora = sp_fechaHora.getValue().toString();
            Float costoPersona = Float.parseFloat(lbl_costoPersona.getText());
            Float costoTotal = Float.parseFloat(lbl_costoTotal.getText());
            Float costoImpuestos = Float.parseFloat(lbl_costoIVA.getText());

            //Se valida que los datos más importantes sean creados. 
            if (cantidadPersonas <= 0 || nombreReservacion.isEmpty()) {

                JOptionPane.showMessageDialog(this, "Por favor complete toda la información requerida para poder continuar", "Error creación reservacion", JOptionPane.ERROR_MESSAGE);

            } else {

                //Se crea una nueva reservación
                Reservacion miReservacion = new Reservacion(id_Usuario, id_Reserva, nombreReservacion, cantidadPersonas, fechaHora, costoPersona, costoTotal, costoImpuestos);

                //Se guarda la reservación en la pila
                reservaciones.push(new nodoReservacion(miReservacion));

                //Se le comunica al usuario que culmino la operación. 
                JOptionPane.showMessageDialog(null, "La reservación se ha guardado en su carrito", "Reservación Exitosa", JOptionPane.INFORMATION_MESSAGE);

                //Se cierra la pantalla y se vuelve a la pantalla de atracciones provincia. 
                this.dispose();

                
                FRM_AtraccionesCR atraccionesCR = new FRM_AtraccionesCR();

                atraccionesCR.setLocationRelativeTo(null);
                atraccionesCR.setVisible(true);

                
            }

        } else {
            //Mendaje para alertar de que la pila de reservas esta completada.
            JOptionPane.showMessageDialog(this, "Ya alcazó el máximo de 5 reservas permitidas por usuario", "Error creación reservacion", JOptionPane.ERROR_MESSAGE);
            this.dispose();
            
            FRM_AtraccionesCR atraccionesCR = new FRM_AtraccionesCR();

            atraccionesCR.setLocationRelativeTo(null);
            atraccionesCR.setVisible(true);

        }


    }//GEN-LAST:event_btn_guardarActionPerformed

    private void lbl_costoIVAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lbl_costoIVAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lbl_costoIVAActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Lbl_Background;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_guardar;
    private javax.swing.JTextField lbl_costoIVA;
    private javax.swing.JTextField lbl_costoPersona;
    private javax.swing.JTextField lbl_costoTotal;
    private javax.swing.JSpinner sp_cantidadPersonas;
    private javax.swing.JSpinner sp_fechaHora;
    private javax.swing.JTextField txt_nombreReservacion;
    // End of variables declaration//GEN-END:variables
}
